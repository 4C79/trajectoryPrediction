
from detect.kalmanfilter import KalmanFilter
import cv2

# Kalman Filter
kf = KalmanFilter()

img = cv2.imread("blue_background.webp")

ball1_positions = [(50, 100), (100, 100), (150, 100), (200, 100), (250, 100), (300, 100), (350, 100), (400, 100), (450, 100)]

#ball2_positions = [(4, 300), (61, 256), (116, 214), (170, 180), (225, 148), (279, 120), (332, 97),
 #        (383, 80), (434, 66), (484, 55), (535, 49), (586, 49), (634, 50),
  #       (683, 58), (731, 69), (778, 82), (824, 101), (870, 124), (917, 148),
   #     (962, 169), (1006, 212), (1051, 249), (1093, 290)]
ball2_positions = [(308,678),(303,681),(286,667),(281,657), (276,644), 
      (271,629),(267,611),(263,589),(259,564),(255,536),(251,504),(246,470),
      (242,433),(237,393),(235,372),(234,352) ,(228,307),(223,259),(218,209)]
#ball2_positions = [(-262,678),(-244,681),(-199,667),(-170,657), (-141,644), 
#       (-112,629),(-85,611),(-57,589),(-32,564),(-5,536),(19,504),(44,470),
 #      (68,433),(90,393),(101,372) ,(113,352),(135,307),(156,259),(178,209)]

for pt in ball2_positions:
    cv2.circle(img, pt, 15, (0, 20, 220), -1)
    predicted = kf.predict(pt[0], pt[1],)

    cv2.circle(img, predicted, 15, (20, 220, 0), 4)

for i in range(20):
    predicted = kf.predict(predicted[0], predicted[1])
    cv2.circle(img, predicted, 20, (20, 220, 0), 4)

    print(predicted)


cv2.imshow("Img", img)
cv2.waitKey(0)